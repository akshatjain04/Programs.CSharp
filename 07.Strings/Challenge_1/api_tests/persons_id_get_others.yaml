# ********RoostGPT********
# Test generated by RoostGPT for test MiniProjects using AI Type Open AI and AI Model gpt-4-1106-preview

# Test generated for /recipients/persons/{id}_get for http method type GET in artillery framework
# RoostTestHash=131d25110f



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "persons_id_get_others.csv"
    fields:
      - "id"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Non-success scenarios for /recipients/persons/{id}"
    flow:
      # Invalid UUID in the path parameter
      - get:
          url: "/recipients/persons/invalid-uuid"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasHeader: "content-type"
            - headerEquals: {"content-type": "application/json"}
        comment: "Expecting a 400 Bad Request due to invalid UUID format in the path parameter."
      - think: 2

      # Missing required path parameter
      - get:
          url: "/recipients/persons/"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasHeader: "content-type"
            - headerEquals: {"content-type": "application/json"}
        comment: "Expecting a 404 Not Found due to missing required path parameter."
      - think: 2

      # Unauthorized access with missing API key
      - get:
          url: "/recipients/persons/{{ id }}"
          expect:
            - statusCode: 401
            - hasHeader: "content-type"
            - headerEquals: {"content-type": "application/json"}
        comment: "Expecting a 401 Unauthorized due to missing API key in the header."
      - think: 2

      # Forbidden access with incorrect API key
      - get:
          url: "/recipients/persons/{{ id }}"
          headers:
            Token: "IncorrectApiKey"
          expect:
            - statusCode: 403
            - hasHeader: "content-type"
            - headerEquals: {"content-type": "application/json"}
        comment: "Expecting a 403 Forbidden due to incorrect API key in the header."
      - think: 2

      # Not Found when using a non-existent UUID
      - get:
          url: "/recipients/persons/{{ id }}"
          headers:
            Token: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasHeader: "content-type"
            - headerEquals: {"content-type": "application/json"}
        comment: "Expecting a 404 Not Found when using a non-existent UUID."
      - think: 2
